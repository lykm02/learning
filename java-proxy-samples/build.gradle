/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'kmchu' at '17-1-24 下午4:17' with Gradle 2.14
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.compilerArgs << '-parameters'
    options.fork = true
    options.encoding = 'UTF-8'
    options.forkOptions.executable = 'javac'
}

repositories {
    mavenLocal()
    maven { url 'http://maven.dev.elenet.me/nexus/content/groups/public/' }
    maven { url 'http://repo.maven.apache.org/maven2' }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'org.javassist:javassist:3.21.0-GA'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
